- name: deployment cuju
  hosts: cuju
  vars:
    - install_machine_username: "user"
    - install_machine_ip_address: "192.168.77.151"
    - directory_path: "~/nfsfolder"
  tasks:
    - name: "let {{ install_machine_username }} sudo without password on Ubuntu"
      become: yes
      lineinfile:
        path: /etc/sudoers
        line: '{{ install_machine_username }} ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: install image and headers of linux 4.15.0-29-generic
      become: yes
      apt:
        pkg:
          - linux-image-4.15.0-29-generic
          - linux-headers-4.15.0-29-generic
        update_cache: yes

    - name: update GRUB_DEFAULT
      become: yes
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_DEFAULT='
        line: 'GRUB_DEFAULT="Advanced options for Ubuntu>Ubuntu, with Linux 4.15.0-29-generic"'
        owner: root
        group: root
        mode: 0755

    - name: update grub
      become: yes
      command: update-grub

    - name: reboot
      become: yes
      reboot:
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30

    - name: install cuju required package
      become: yes
      apt:
        pkg:
         - vim
         - gcc
         - make
         - gdb
         - fakeroot
         - build-essential
         - kernel-package
         - libncurses5
         - libncurses5-dev
         - zlib1g-dev
         - libglib2.0-dev
         - qemu
         - xorg
         - bridge-utils
         - openvpn
         - libelf-dev
         - libssl-dev
         - libpixman-1-dev
         - nfs-common
         - git
         - tigervnc-viewer
        update_cache: yes

    - name: creat directory folder
      file:
        path: "{{ directory_path }}"
        state: directory
        mode: 0755

    - name: git clone cuju
      command: git clone https://github.com/Cuju-ft/Cuju.git
      args:
        chdir: "{{ directory_path }}"

    - name: Cuju make
      command: "{{ item }}"
      with_items:
        - git checkout support/kernel4.15
        - ./configure --enable-cuju --enable-kvm --disable-pie --target-list=x86_64-softmmu
        - make clean
        - make -j8
      args:
        chdir: "{{ directory_path }}/Cuju"

    - name: KVM make
      command: "{{ item }}"
      with_items:
        - ./configure
        - make clean
        - make -j8
        - ./reinsmodkvm.sh
      args:
        chdir: "{{ directory_path }}/Cuju/kvm"

    - name: copy runvm.sh, recv.sh, ftmode.sh
      copy: 
        src: "{{ item }}"
        dest: "{{ directory_path }}/Cuju"
        mode: 0755
      with_items:
        - ./cuju_sh/runvm.sh
        - ./cuju_sh/recv.sh
        - ./cuju_sh/ftmode.sh

    - name: change runvm.sh
      replace:
        path: "{{ directory_path }}/Cuju/runvm.sh"
        regexp: '\[your username\]'
        replace: "{{ install_machine_username }}"

    - name: change ftmode.sh
      replace:
        path: "{{ directory_path }}/Cuju/ftmode.sh"
        regexp: '{{ item.regexp }}'
        replace: '{{ item.replace }}'
      with_items:
          - { regexp: '\[your username\]', replace: '{{ install_machine_username }}' }
          - { regexp: '\[your address\]', replace: '{{ install_machine_ip_address }}' }

    - name: download gdown.pl (download Ubuntu20G-1604.img)
      get_url:
        url: https://raw.githubusercontent.com/circulosmeos/gdown.pl/master/gdown.pl
        dest: "{{ directory_path }}"
        mode: 0775

    - name: download Ubuntu20G-1604.tar.gz (download Ubuntu20G-1604.img)
      command: ./gdown.pl https://drive.google.com/file/d/0B9au9R9FzSWKNjZpWUNlNDZLcEU/view Ubuntu20G-1604.tar.gz
      args:
        chdir: "{{ directory_path }}"

    - name: unzip Ubuntu20G-1604.tar.gz (download Ubuntu20G-1604.img)
      unarchive:
        src: "{{ directory_path }}/Ubuntu20G-1604.tar.gz"
        dest: "{{ directory_path }}"
        remote_src: yes
